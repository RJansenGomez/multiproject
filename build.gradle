buildscript {
    ext {
        springBootVersion = '2.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

repositories {
    jcenter()
}

jacoco {
    toolVersion = '0.8.5'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'jacoco'

    repositories {
        jcenter()
    }

    jacoco {
        toolVersion = '0.8.5'
    }
}

subprojects {

    sourceCompatibility = '1.11'

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()

    }

    dependencies {
        annotationProcessor 'org.projectlombok:lombok'

        implementation('org.springframework.boot:spring-boot-starter-actuator',
                'org.springframework.boot:spring-boot-starter-data-jpa',
                'org.springframework.boot:spring-boot-starter-jooq',
                'org.springframework.boot:spring-boot-starter-security',
                'org.springframework.boot:spring-boot-starter-web',
                'org.springframework.kafka:spring-kafka')
        implementation project(':library')
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly('org.postgresql:postgresql',
                'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR2')

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation('org.springframework.kafka:spring-kafka-test',
                'org.springframework.security:spring-security-test')
    }

    test {
        useJUnitPlatform()
    }
}
configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'

    implementation('org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-jooq',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.kafka:spring-kafka')
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly('org.postgresql:postgresql',
            'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR2')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.springframework.kafka:spring-kafka-test',
            'org.springframework.security:spring-security-test')
}

test {
    useJUnitPlatform()
}
group 'com.rjansen.multiproject'
version '0.0.1'

jacoco {
    reportsDir = file("$buildDir/jacoco")
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}


